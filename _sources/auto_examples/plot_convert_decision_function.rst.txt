
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\plot_convert_decision_function.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_convert_decision_function.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_convert_decision_function.py:


.. _l-rf-example-decision-function:

Probabilities or raw scores
===========================

A classifier usually returns a matrix of probabilities.
By default, *sklearn-onnx* creates an ONNX graph
which returns probabilities but it may skip that
step and return raw scores if the model implements
the method *decision_function*. Option ``'raw_scores'``
is used to change the default behaviour. Let's see
that on a simple example.

.. contents::
    :local:

Train a model and convert it
++++++++++++++++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 25-47

.. code-block:: default

    import numpy
    import sklearn
    from sklearn.datasets import load_iris
    from sklearn.model_selection import train_test_split
    import onnxruntime as rt
    import onnx
    import skl2onnx
    from skl2onnx.common.data_types import FloatTensorType
    from skl2onnx import convert_sklearn
    from sklearn.linear_model import LogisticRegression

    iris = load_iris()
    X, y = iris.data, iris.target
    X_train, X_test, y_train, y_test = train_test_split(X, y)
    clr = LogisticRegression(max_iter=500)
    clr.fit(X_train, y_train)
    print(clr)

    initial_type = [('float_input', FloatTensorType([None, 4]))]
    onx = convert_sklearn(clr, initial_types=initial_type,
                          target_opset=12)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    LogisticRegression(max_iter=500)




.. GENERATED FROM PYTHON SOURCE LINES 48-53

Output type
+++++++++++

Let's confirm the output type of the probabilities
is a list of dictionaries with onnxruntime.

.. GENERATED FROM PYTHON SOURCE LINES 53-59

.. code-block:: default


    sess = rt.InferenceSession(onx.SerializeToString())
    res = sess.run(None, {'float_input': X_test.astype(numpy.float32)})
    print("skl", clr.predict_proba(X_test[:1]))
    print("onnx", res[1][:2])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    skl [[9.71046420e-01 2.89534742e-02 1.06043091e-07]]
    onnx [{0: 0.9710464477539062, 1: 0.028953460976481438, 2: 1.0604293976257395e-07}, {0: 0.000879956700373441, 1: 0.4618963897228241, 2: 0.5372236967086792}]




.. GENERATED FROM PYTHON SOURCE LINES 60-63

Raw scores and decision_function
++++++++++++++++++++++++++++++++


.. GENERATED FROM PYTHON SOURCE LINES 63-74

.. code-block:: default


    initial_type = [('float_input', FloatTensorType([None, 4]))]
    options = {id(clr): {'raw_scores': True}}
    onx2 = convert_sklearn(clr, initial_types=initial_type, options=options,
                           target_opset=12)

    sess2 = rt.InferenceSession(onx2.SerializeToString())
    res2 = sess2.run(None, {'float_input': X_test.astype(numpy.float32)})
    print("skl", clr.decision_function(X_test[:1]))
    print("onnx", res2[1][:2])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    skl [[ 6.51424112  3.00155705 -9.51579818]]
    onnx [{0: 6.514241695404053, 1: 3.0015571117401123, 2: -9.515798568725586}, {0: -4.225839614868164, 1: 2.037383556365967, 2: 2.188457489013672}]




.. GENERATED FROM PYTHON SOURCE LINES 75-76

**Versions used for this example**

.. GENERATED FROM PYTHON SOURCE LINES 76-82

.. code-block:: default


    print("numpy:", numpy.__version__)
    print("scikit-learn:", sklearn.__version__)
    print("onnx: ", onnx.__version__)
    print("onnxruntime: ", rt.__version__)
    print("skl2onnx: ", skl2onnx.__version__)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    numpy: 1.21.1
    scikit-learn: 0.24.2
    onnx:  1.9.0
    onnxruntime:  1.8.1
    skl2onnx:  1.9.2





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.884 seconds)


.. _sphx_glr_download_auto_examples_plot_convert_decision_function.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/onnx/sklearn-onnx/master?filepath=notebooks/auto_examples/plot_convert_decision_function.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_convert_decision_function.py <plot_convert_decision_function.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_convert_decision_function.ipynb <plot_convert_decision_function.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
