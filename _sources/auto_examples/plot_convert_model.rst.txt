
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_convert_model.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_convert_model.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_convert_model.py:


.. _l-rf-iris-example:

Train, convert and predict a model
==================================

Train and deploy a model usually involves the
three following steps:

* train a pipeline with *scikit-learn*,
* convert it into *ONNX* with *sklearn-onnx*,
* predict with *onnxruntime*.

Train a model
+++++++++++++

A very basic example using random forest and
the iris dataset.

.. GENERATED FROM PYTHON SOURCE LINES 23-43

.. code-block:: Python


    import skl2onnx
    import onnx
    import sklearn
    from sklearn.linear_model import LogisticRegression
    import numpy
    import onnxruntime as rt
    from skl2onnx.common.data_types import FloatTensorType
    from skl2onnx import convert_sklearn
    from sklearn.datasets import load_iris
    from sklearn.model_selection import train_test_split
    from sklearn.ensemble import RandomForestClassifier

    iris = load_iris()
    X, y = iris.data, iris.target
    X_train, X_test, y_train, y_test = train_test_split(X, y)
    clr = RandomForestClassifier()
    clr.fit(X_train, y_train)
    print(clr)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    RandomForestClassifier()




.. GENERATED FROM PYTHON SOURCE LINES 44-46

Convert a model into ONNX
+++++++++++++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 46-53

.. code-block:: Python


    initial_type = [("float_input", FloatTensorType([None, 4]))]
    onx = convert_sklearn(clr, initial_types=initial_type, target_opset=12)

    with open("rf_iris.onnx", "wb") as f:
        f.write(onx.SerializeToString())








.. GENERATED FROM PYTHON SOURCE LINES 54-56

Compute the prediction with ONNX Runtime
++++++++++++++++++++++++++++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 56-62

.. code-block:: Python

    sess = rt.InferenceSession("rf_iris.onnx", providers=["CPUExecutionProvider"])
    input_name = sess.get_inputs()[0].name
    label_name = sess.get_outputs()[0].name
    pred_onx = sess.run([label_name], {input_name: X_test.astype(numpy.float32)})[0]
    print(pred_onx)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [2 0 0 2 0 2 2 2 1 2 2 2 2 0 2 0 0 1 2 0 1 0 2 2 1 2 0 0 0 1 1 0 1 2 1 1 1
     1]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Full example with a logistic regression

.. GENERATED FROM PYTHON SOURCE LINES 64-79

.. code-block:: Python


    clr = LogisticRegression()
    clr.fit(X_train, y_train)
    initial_type = [("float_input", FloatTensorType([None, X_train.shape[1]]))]
    onx = convert_sklearn(clr, initial_types=initial_type, target_opset=12)
    with open("logreg_iris.onnx", "wb") as f:
        f.write(onx.SerializeToString())

    sess = rt.InferenceSession("logreg_iris.onnx", providers=["CPUExecutionProvider"])
    input_name = sess.get_inputs()[0].name
    label_name = sess.get_outputs()[0].name
    pred_onx = sess.run([label_name], {input_name: X_test.astype(numpy.float32)})[0]
    print(pred_onx)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [2 0 0 2 0 2 2 2 1 2 2 2 2 0 2 0 0 1 2 0 1 0 2 2 1 2 0 0 0 1 1 0 1 2 1 1 1
     1]




.. GENERATED FROM PYTHON SOURCE LINES 80-81

**Versions used for this example**

.. GENERATED FROM PYTHON SOURCE LINES 81-87

.. code-block:: Python


    print("numpy:", numpy.__version__)
    print("scikit-learn:", sklearn.__version__)
    print("onnx: ", onnx.__version__)
    print("onnxruntime: ", rt.__version__)
    print("skl2onnx: ", skl2onnx.__version__)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    numpy: 2.3.1
    scikit-learn: 1.6.1
    onnx:  1.19.0
    onnxruntime:  1.23.0
    skl2onnx:  1.19.1





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.373 seconds)


.. _sphx_glr_download_auto_examples_plot_convert_model.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_convert_model.ipynb <plot_convert_model.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_convert_model.py <plot_convert_model.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_convert_model.zip <plot_convert_model.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
