
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\plot_backend.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_backend.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_backend.py:


.. _l-example-backend-api:

ONNX Runtime Backend for ONNX
=============================

.. index:: backend

*ONNX Runtime* extends the
`onnx backend API <https://github.com/onnx/onnx/blob/master/docs/
ImplementingAnOnnxBackend.md>`_
to run predictions using this runtime.
Let's use the API to compute the prediction
of a simple logistic regression model.

.. GENERATED FROM PYTHON SOURCE LINES 20-43

.. code-block:: default

    import skl2onnx
    import onnxruntime
    import onnx
    import sklearn
    import numpy
    from onnxruntime import get_device
    import numpy as np
    from onnxruntime import datasets
    import onnxruntime.backend as backend
    from onnx import load

    name = datasets.get_example("logreg_iris.onnx")
    model = load(name)

    rep = backend.prepare(model, 'CPU')
    x = np.array([[-1.0, -2.0, 5.0, 6.0],
                  [-1.0, -2.0, -3.0, -4.0],
                  [-1.0, -2.0, 7.0, 8.0]],
                 dtype=np.float32)
    label, proba = rep.run(x)
    print("label={}".format(label))
    print("probabilities={}".format(proba))



.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "C:\xadupre\microsoft_xadupre\sklearn-onnx\docs\examples\plot_backend.py", line 39, in <module>
        label, proba = rep.run(x)
      File "C:\xadupre\microsoft_xadupre\onnxruntime\build\Windows\Release\Release\onnxruntime\backend\backend_rep.py", line 51, in run
        return self._session.run(None, inps, options)
      File "C:\xadupre\microsoft_xadupre\onnxruntime\build\Windows\Release\Release\onnxruntime\capi\onnxruntime_inference_collection.py", line 188, in run
        return self._sess.run(output_names, input_feed, run_options)
    onnxruntime.capi.onnxruntime_pybind11_state.InvalidArgument: [ONNXRuntimeError] : 2 : INVALID_ARGUMENT : Got invalid dimensions for input: float_input for the following indices
     index: 1 Got: 4 Expected: 2
     Please fix either the inputs or the model.




.. GENERATED FROM PYTHON SOURCE LINES 44-46

The device depends on how the package was compiled,
GPU or CPU.

.. GENERATED FROM PYTHON SOURCE LINES 46-48

.. code-block:: default

    print(get_device())


.. GENERATED FROM PYTHON SOURCE LINES 49-51

The backend can also directly load the model
without using *onnx*.

.. GENERATED FROM PYTHON SOURCE LINES 51-61

.. code-block:: default


    rep = backend.prepare(name, 'CPU')
    x = np.array([[-1.0, -2.0, -3.0, -4.0],
                  [-1.0, -2.0, -3.0, -4.0],
                  [-1.0, -2.0, -3.0, -4.0]],
                 dtype=np.float32)
    label, proba = rep.run(x)
    print("label={}".format(label))
    print("probabilities={}".format(proba))


.. GENERATED FROM PYTHON SOURCE LINES 62-65

The backend API is implemented by other frameworks
and makes it easier to switch between multiple runtimes
with the same API.

.. GENERATED FROM PYTHON SOURCE LINES 67-68

**Versions used for this example**

.. GENERATED FROM PYTHON SOURCE LINES 68-74

.. code-block:: default


    print("numpy:", numpy.__version__)
    print("scikit-learn:", sklearn.__version__)
    print("onnx: ", onnx.__version__)
    print("onnxruntime: ", onnxruntime.__version__)
    print("skl2onnx: ", skl2onnx.__version__)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.058 seconds)


.. _sphx_glr_download_auto_examples_plot_backend.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/onnx/sklearn-onnx/master?filepath=notebooks/auto_examples/plot_backend.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_backend.py <plot_backend.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_backend.ipynb <plot_backend.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
