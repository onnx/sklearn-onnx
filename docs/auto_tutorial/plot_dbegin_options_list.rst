
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_tutorial\plot_dbegin_options_list.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_tutorial_plot_dbegin_options_list.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_tutorial_plot_dbegin_options_list.py:


Black list operators when converting
====================================

.. index:: black list, white list

Some runtimes do not implement a runtime for every
available operator in ONNX. The converter does not know
that but it is possible to black some operators. Most of
the converters do not change their behaviour, they fail
if they use a black listed operator, a couple of them
produces a different ONNX graph.

.. contents::
    :local:

GaussianMixture
+++++++++++++++

The first converter to change its behaviour depending on a black list
of operators is for model *GaussianMixture*.

.. GENERATED FROM PYTHON SOURCE LINES 25-40

.. code-block:: default

    from pyquickhelper.helpgen.graphviz_helper import plot_graphviz
    from mlprodict.onnxrt import OnnxInference
    from timeit import timeit
    import numpy
    from onnxruntime import InferenceSession
    from sklearn.mixture import GaussianMixture
    from sklearn.datasets import load_iris
    from sklearn.model_selection import train_test_split
    from skl2onnx import to_onnx

    data = load_iris()
    X_train, X_test = train_test_split(data.data)
    model = GaussianMixture()
    model.fit(X_train)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    C:\Python395_x64\lib\site-packages\sklearn\cluster\_kmeans.py:881: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
      warnings.warn(

    GaussianMixture()



.. GENERATED FROM PYTHON SOURCE LINES 41-43

Default conversion
++++++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 43-55

.. code-block:: default


    model_onnx = to_onnx(
        model, X_train[:1].astype(numpy.float32),
        options={id(model): {'score_samples': True}},
        target_opset=12)
    sess = InferenceSession(model_onnx.SerializeToString())

    xt = X_test[:5].astype(numpy.float32)
    print(model.score_samples(xt))
    print(sess.run(None, {'X': xt})[2])






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [-4.63413544 -1.82908431 -2.74063698 -5.7397913  -3.38552462]
    [[-4.634138 ]
     [-1.8290834]
     [-2.7406368]
     [-5.739794 ]
     [-3.3855247]]




.. GENERATED FROM PYTHON SOURCE LINES 56-57

Display the ONNX graph.

.. GENERATED FROM PYTHON SOURCE LINES 57-64

.. code-block:: default



    oinf = OnnxInference(model_onnx)
    ax = plot_graphviz(oinf.to_dot())
    ax.get_xaxis().set_visible(False)
    ax.get_yaxis().set_visible(False)




.. image:: /auto_tutorial/images/sphx_glr_plot_dbegin_options_list_001.png
    :alt: plot dbegin options list
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 65-71

Conversion without ReduceLogSumExp
++++++++++++++++++++++++++++++++++

Parameter *black_op* is used to tell the converter
not to use this operator. Let's see what the converter
produces in that case.

.. GENERATED FROM PYTHON SOURCE LINES 71-83

.. code-block:: default


    model_onnx2 = to_onnx(
        model, X_train[:1].astype(numpy.float32),
        options={id(model): {'score_samples': True}},
        black_op={'ReduceLogSumExp'},
        target_opset=12)
    sess2 = InferenceSession(model_onnx2.SerializeToString())

    xt = X_test[:5].astype(numpy.float32)
    print(model.score_samples(xt))
    print(sess2.run(None, {'X': xt})[2])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [-4.63413544 -1.82908431 -2.74063698 -5.7397913  -3.38552462]
    [[-4.634138 ]
     [-1.8290834]
     [-2.7406373]
     [-5.739794 ]
     [-3.3855252]]




.. GENERATED FROM PYTHON SOURCE LINES 84-85

Display the ONNX graph.

.. GENERATED FROM PYTHON SOURCE LINES 85-92

.. code-block:: default


    oinf = OnnxInference(model_onnx2)
    ax = plot_graphviz(oinf.to_dot())
    ax.get_xaxis().set_visible(False)
    ax.get_yaxis().set_visible(False)





.. image:: /auto_tutorial/images/sphx_glr_plot_dbegin_options_list_002.png
    :alt: plot dbegin options list
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 93-95

Processing time
+++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 95-102

.. code-block:: default


    print(timeit(stmt="sess.run(None, {'X': xt})",
                 number=10000, globals={'sess': sess, 'xt': xt}))

    print(timeit(stmt="sess2.run(None, {'X': xt})",
                 number=10000, globals={'sess2': sess2, 'xt': xt}))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    0.4192585000000122
    0.4977758999999935




.. GENERATED FROM PYTHON SOURCE LINES 103-104

The model using ReduceLogSumExp is much faster.

.. GENERATED FROM PYTHON SOURCE LINES 106-113

If the converter cannot convert without...
++++++++++++++++++++++++++++++++++++++++++

Many converters do not consider the white and black lists
of operators. If a converter fails to convert without using
a blacklisted operator (or only whitelisted operators),
*skl2onnx* raises an error.

.. GENERATED FROM PYTHON SOURCE LINES 113-122

.. code-block:: default


    try:
        to_onnx(
            model, X_train[:1].astype(numpy.float32),
            options={id(model): {'score_samples': True}},
            black_op={'ReduceLogSumExp', 'Add'},
            target_opset=12)
    except RuntimeError as e:
        print('Error:', e)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Error: Operator 'Add' is black listed.





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.315 seconds)


.. _sphx_glr_download_auto_tutorial_plot_dbegin_options_list.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/onnx/sklearn-onnx/master?filepath=notebooks/auto_tutorial/plot_dbegin_options_list.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_dbegin_options_list.py <plot_dbegin_options_list.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_dbegin_options_list.ipynb <plot_dbegin_options_list.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
