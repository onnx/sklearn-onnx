name: CI Win/Mac
on: [push, pull_request]
jobs:
  run:
    name: ${{ matrix.os }} py==${{ matrix.python_version }} - sklearn${{ matrix.sklearn_version }} - ${{ matrix.onnxrt_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        sklearn_version: ['==1.5.0', '==1.4.2', '==1.3.2', '==1.2.2', '==1.1.3']
        include:
          - sklearn_version: '==1.5.0'
            python_version: '3.11'
            numpy_version: '>=1.21.1'
            scipy_version: '>=1.7.0'
            onnx_version: 'onnx==1.16.0'
            onnxrt_version: 'onnxruntime==1.18.0'
          - python_version: '3.11'
            numpy_version: '>=1.21.1'
            scipy_version: '>=1.7.0'
            onnx_version: 'onnx<1.16.0'
            onnxrt_version: 'onnxruntime<1.18.0'
            sklearn_version: '==1.3.2'
          - python_version: '3.10'
            numpy_version: '>=1.21.1'
            scipy_version: '>=1.7.0'
            onnx_version: 'onnx<1.15'
            onnxrt_version: 'onnxruntime<1.17.0'
            sklearn_version: '==1.2.2'
          - python_version: '3.9'
            numpy_version: '>=1.21.1'
            scipy_version: '>=1.7.0'
            onnx_version: 'onnx<1.14'
            onnxrt_version: 'onnxruntime<1.16.0'
            sklearn_version: '==1.2.2'
          - sklearn_version: '==1.4.2'
            python_version: '3.11'
            numpy_version: '>=1.21.1'
            scipy_version: '>=1.7.0'
            onnx_version: 'onnx>=1.16.0'
            onnxrt_version: 'onnxruntime>=1.18.0'
          - sklearn_version: '==1.1.3'
            python_version: '3.11'
            numpy_version: '>=1.21.1'
            scipy_version: '>=1.7.0'
            onnx_version: 'onnx>=1.16.0'
            onnxrt_version: 'onnxruntime>=1.18.0'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - uses: tlylt/install-graphviz@v1

      - name: Install requirements
        run: python -m pip install -r requirements.txt

      - name: Install requirements dev
        run: python -m pip install -r requirements-dev.txt

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install specific versions
        run: pip install "${{ matrix.onnx_version }}" "${{ matrix.onnxrt_version }}" "numpy${{ matrix.numpy_version }}" "scikit-learn${{ matrix.sklearn_version}}" "scipy${{ matrix.scipy_version }}"

      - name: Install
        run: pip install -e .

      - name: versions
        run: |
          python -c "from numpy import __version__;print('numpy', __version__)"
          python -c "from pandas import __version__;print('pandas', __version__)"
          python -c "from scipy import __version__;print('scipy', __version__)"
          python -c "from sklearn import __version__;print('sklearn', __version__)"
          python -c "from onnxruntime import __version__;print('onnxruntime', __version__)"
          python -c "from onnx import __version__;print('onnx', __version__)"
          python -c "from skl2onnx import __max_supported_opset__;print('__max_supported_opset__', __max_supported_opset__)"
          python -c "import onnx.defs;print('onnx_opset_version', onnx.defs.onnx_opset_version())"
  
      - name: Run tests
        run: |
          pytest tests --maxfail=10 --durations=10

      - name: build
        run: pip wheel .

      - uses: actions/upload-artifact@v4
        with:
          path: ./dist/**
